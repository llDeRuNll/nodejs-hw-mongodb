{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts api",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Conacts backend api"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-gqpe.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of all contacts with this endpoint.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "Any contact's field can be used. Default: name"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "schema": {
              "type": "string",
              "example": "097763543"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "example": "Lala"
            }
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "example": "example@email.com"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 25
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 3
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": 200,
                      "message": "Successfully found contacts!",
                      "data": {
                        "data": [
                          {
                            "id": "65ca67e7ae7f10c88b598384",
                            "name": "Lala",
                            "phoneNumber": "097763543",
                            "email": "example@email.com",
                            "isFavourite": true,
                            "contactType": "work",
                            "photo": "https://cloudinary.com/sample.jpg"
                          },
                          {
                            "id": "65ca67e7ae7f10c88b598385",
                            "name": "Dima",
                            "phoneNumber": "093123123",
                            "email": "dima@email.com",
                            "isFavourite": false,
                            "contactType": "personal",
                            "photo": null
                          }
                        ],
                        "page": 1,
                        "perPage": 10,
                        "totalItems": 25,
                        "totalPages": 3,
                        "hasNextPage": true,
                        "hasPreviousPage": false
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's holder name",
                    "type": "string",
                    "example": "Ratatouille"
                  },
                  "phoneNumber": {
                    "description": "Phone number",
                    "type": "string",
                    "example": "087263791982"
                  },
                  "email": {
                    "description": "Contact's e-mail",
                    "type": "string",
                    "example": "ratatouille@gmail.com"
                  },
                  "isFavourite": {
                    "description": "Is the contact added in favourites?",
                    "type": "boolean",
                    "example": true
                  },
                  "contactType": {
                    "description": "Contact type",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "photo": {
                    "description": "Link to contact's photo (file upload)",
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "examples": {
                "createContactExample": {
                  "summary": "Example payload for creating a contact",
                  "value": {
                    "name": "Ratatouille",
                    "phoneNumber": "087263791982",
                    "email": "ratatouille@gmail.com",
                    "isFavourite": true,
                    "contactType": "personal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                },
                "examples": {
                  "contactCreated": {
                    "summary": "Contact creation success example",
                    "value": {
                      "status": 201,
                      "message": "Successfully created a contact!",
                      "data": {
                        "id": "65ca67e7ae7f10c88b598384",
                        "name": "Ratatouille",
                        "phoneNumber": "087263791982",
                        "email": "ratatouille@gmail.com",
                        "isFavourite": true,
                        "contactType": "personal",
                        "photo": "https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContactById",
        "description": "Get a single contact by its unique identifier.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "Unique ID of the contact",
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact."
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "Example response",
                    "value": {
                      "status": 200,
                      "message": "Successfully found contact.",
                      "data": {
                        "_id": "65ca67e7ae7f10c88b598384",
                        "name": "John Doe",
                        "phoneNumber": "+123456789",
                        "contactType": "work",
                        "photo": "https://res.cloudinary.com/demo/image/upload/sample.jpg",
                        "createdAt": "2024-06-01T12:34:56.789Z",
                        "updatedAt": "2024-06-01T12:34:56.789Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/404"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact by id",
        "operationId": "updateContact",
        "description": "Update fields of an existing contact.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Name"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "0987654321"
                  },
                  "email": {
                    "type": "string",
                    "example": "updated.email@example.com"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": false
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact updated successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/404"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact by id",
        "operationId": "deleteContact",
        "description": "Delete an existing contact by id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact deleted successfully"
          },
          "401": {
            "$ref": "#/components/responses/404"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "404": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not Found"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384",
            "description": "Unique identifier of the contact"
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "description": "Full name of the contact"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+123456789",
            "description": "Contact's phone number"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work",
            "description": "Type of contact"
          },
          "photo": {
            "type": "string",
            "example": "https://res.cloudinary.com/demo/image/upload/sample.jpg",
            "description": "URL of the contact's photo"
          },
          "isFavourite": {
            "type": "boolean",
            "example": false,
            "description": "Is the contact marked as favourite"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-06-01T12:34:56.789Z",
            "description": "Contact creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-06-01T12:34:56.789Z",
            "description": "Contact last update timestamp"
          }
        }
      }
    },
    "responses": {
      "404": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not Found"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}